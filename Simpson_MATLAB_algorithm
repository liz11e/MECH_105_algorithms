function [I] = Simpson(x,y)
% The function numerically evaluates the integral of the vector of function 
% values y with respect to x.Numerical evaluation of integral by Simpson's 
% 1/3 Rule.

% Inputs
%   x = the vector of equally spaced independent variable
%   y = the vector of function values with respect to x
% Outputs:
%   I = the numerical integral calculated

if length(x) ~= length(y)
    error('x and y vectors are not the same length'); end
for i = 1:(length(x)-2)
    if x(i+1)-x(i) ~= x(i+2)-x(i+1)
        error('x values are not evenly spaced'); end
end

n = length(x)-1; % number of 'sections'
h = (x(length(x))-(x(1)))/(length(x)-1); % step size 

if n == 1
    warning('only two data points, trapizoid rule was used')
    Integral = ((x(2)-x(1)) * (y(2) - ((y(2)-y(1))/2)));
elseif n == 2
    Integral = ((1/3)*h)*(y(1) + 4*y(2) + y(3));
else
    if mod(n,2) == 0
        nMod = n;
    else
        nMod = n - 1;
        warning('trapizoid rule had to be used for the last interval')
        % !!! trap rule used because there is an uneven number of sections
    end

    % Integral calculations
    sumYx4 = 0 ; sumYx2 = 0;
    for i = 2:
        sumYx4 = sumyYx4 + y(2*i); end
    for i = 2:(nMod/2)
        sumYx2 = sumYx2 + y(2*i - 1); end
     Integral = ((1/3)*h) * (y(1) + 4*sumYx4 + 2*sumYx2 + y(nMod+1));
     if nMod ~= n
        Integral = Integral + ((x(n+1)-x(n)) * ( y(n+1) - ((y(n+1)-y(n))/2)));
    end
end

I = Integral;

end
